// box that holds language selector and smartlabel
// for mobile version layout
.box-language-wrapper {
  @include media-query(tablet, notebook) {
    width: 240px;
  }

  > .component-content > .content {
    @include media-query(auto, tablet) {
      display: flex;
      flex-wrap: wrap;
      justify-content: space-between;

      > a {
        display: none;
      }
    }

    @include media-query(tablet, desktop) {
      display: block;
    }

    @include media-query(desktop, auto) {
      display: flex;
      align-items: center;
    }
  }
}

.box-language-selector {
  @function gl($a...) { @return get-last($header, 'supplementary._language', $a...); }
  box-sizing: border-box;
  flex-shrink: 0;

  > .component-content > .content {
    $languageSelectorBox: merge((
      margin: (
        margin-bottom: breakpoint(0, 20px, 0)
      )
    ), gl('box'));

    @include breakpoints {
      @include box($languageSelectorBox, $media);
    }
  }

  .navigation {
    position: relative;
    display: flex;
    align-self: stretch;
    align-items: center;
  }

  .richText {
    p {
      $languageSelectorLabel: merge((
        margin: (
          margin-top: 0
        )
      ), gl('_label.paragraph'));

      @include breakpoints {
        @include paragraph($languageSelectorLabel, $media);
      }
    }
  }

  .navigation-root.navigation-level1 {
    @include media-query(auto, notebook) {
      display: flex;
      align-items: center;
    }

    @include breakpoints(mobile, tablet) {
      margin: safetype(gl('_space-between', $media), 0) * -0.5;
    }
  }

  .navigation-item {
    @include breakpoints(mobile, tablet) {
      margin: safetype(gl('_space-between', $media), 0) * 0.5;
    }

    .navigation-item-decoration {
      display: none;
    }

    .navigation-item-title {
      @include breakpoints {
        @include button(gl('button'), $media);
      }

      @include breakpoints(mobile, tablet) {
        &.is-active {
          @include button(gl('button.hover'), $media);
        }
      }

      @include media-query(desktop, auto) {
        display: none;

        &.is-active {
          display: safetype(gl('button.display.desktop'), inline-flex);
        }
      }
    }
  }

  // ONLY DESKTOP VERSION HAS "SELECT BOX"
  // veryspecific implementation on this one
  .navigation-root.navigation-select-box {
    @include box(gl('_desktop._dropdown.box'), 'desktop');
    @include transition(gl('_desktop._dropdown.transition'), (
      'transform', 'opacity', 'visibility'
    ), 'desktop');
    visibility: hidden;
    opacity: 0;
    position: absolute;
    top: -1px;
    left: -1px;
    width: 100%;
    z-index: $z-index-layer;
    transform: translateY(-100%);

    @include media-query(auto, notebook) {
      display: none;
    }

    .navigation-item {
      .navigation-item-title {
        @include button (gl('_desktop._dropdown.button'), 'desktop');

        &:after,
        &:before {
          opacity: 0;
        }
      }

      // show icon only in first item
      &:first-child .navigation-item-title {
        &:after,
        &:before {
          opacity: 1;
        }
      }
    }
  }

  &:hover .navigation-select-box,
  .navigation-select-box.is-enabled {
    transition-delay: 0s;
    visibility: visible;
    opacity: 1;
    transform: translateY(0);
  }
}
